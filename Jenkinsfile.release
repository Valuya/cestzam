#!groovy

pipeline {
    agent any
    parameters {
        string(name: 'NEW_VERSION', defaultValue: '2020.1.1', description: 'New version')
        string(name: 'NEXT_VERSION', defaultValue: '2020.1.2-SNAPSHOT', description: 'Next version')
        string(name: 'RELEASE_BRANCH', defaultValue: 'master', description: 'Release branch')
    }
    options {
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }
    stages {
        stage ('Tag') {
             when {
                expression {
                    return (params.NEW_VERSION != '' && params.NEXT_VERSION != '')
                }
            }
            steps {
                script {
                    env.NEW_VERSION = params.NEW_VERSION
                    env.NEXT_VERSION = params.NEXT_VERSION
                }
                withMaven(maven: 'maven', mavenSettingsConfig: 'nexus-mvn-settings') {
                    sh "git clean -df"
                    sh "mvn --batch-mode org.codehaus.mojo:versions-maven-plugin:2.3:set -DnewVersion=$NEW_VERSION || exit 1"
                    sh "git add pom.xml"
                    sh "git add **/pom.xml"
                    sh 'git config user.email "jenkins@valuya.be"'
                    sh 'git config user.name "Jenkins release"'
                    sh 'git  commit -m "Release $NEW_VERSION"'
                    sh "git tag $NEW_VERSION"
                    sh "git push origin HEAD:$RELEASE_BRANCH"
                    sh "git push origin $NEW_VERSION"
                }
                withMaven(maven: 'maven', mavenSettingsConfig: 'nexus-mvn-settings') {
                    sh "git merge origin/master"
                    sh "mvn --batch-mode org.codehaus.mojo:versions-maven-plugin:2.3:set -DnewVersion=$NEXT_VERSION || exit 1"
                    sh "git add pom.xml"
                    sh "git add **/pom.xml"
                    sh 'git commit -m "Version $NEXT_VERSION"'
                    sh "git push origin HEAD:dev"
                }
            }
        }
    }
}
